! function(t, o, i, e) { "use strict"; var s, a, n, h, r, l, g, p = function() { this.reset() };
    p.prototype = { reset: function() { return this.m = [1, 0, 0, 1, 0, 0], this }, multiply: function(t) { var o = this.m[0] * t.m[0] + this.m[2] * t.m[1],
                    i = this.m[1] * t.m[0] + this.m[3] * t.m[1],
                    e = this.m[0] * t.m[2] + this.m[2] * t.m[3],
                    s = this.m[1] * t.m[2] + this.m[3] * t.m[3],
                    a = this.m[0] * t.m[4] + this.m[2] * t.m[5] + this.m[4],
                    n = this.m[1] * t.m[4] + this.m[3] * t.m[5] + this.m[5]; return this.m[0] = o, this.m[1] = i, this.m[2] = e, this.m[3] = s, this.m[4] = a, this.m[5] = n, this }, inverse: function() { var t = new p;
                t.m = this.m.slice(0); var o = 1 / (t.m[0] * t.m[3] - t.m[1] * t.m[2]),
                    i = t.m[3] * o,
                    e = -t.m[1] * o,
                    s = -t.m[2] * o,
                    a = t.m[0] * o,
                    n = o * (t.m[2] * t.m[5] - t.m[3] * t.m[4]),
                    h = o * (t.m[1] * t.m[4] - t.m[0] * t.m[5]); return t.m[0] = i, t.m[1] = e, t.m[2] = s, t.m[3] = a, t.m[4] = n, t.m[5] = h, t }, rotate: function(t) { var o = Math.cos(t),
                    i = Math.sin(t),
                    e = this.m[0] * o + this.m[2] * i,
                    s = this.m[1] * o + this.m[3] * i,
                    a = this.m[0] * -i + this.m[2] * o,
                    n = this.m[1] * -i + this.m[3] * o; return this.m[0] = e, this.m[1] = s, this.m[2] = a, this.m[3] = n, this }, translate: function(t, o) { return this.m[4] += this.m[0] * t + this.m[2] * o, this.m[5] += this.m[1] * t + this.m[3] * o, this }, scale: function(t, o) { return this.m[0] *= t, this.m[1] *= t, this.m[2] *= o, this.m[3] *= o, this }, transformPoint: function(t, o) { var i = t,
                    e = o; return [t = i * this.m[0] + e * this.m[2] + this.m[4], o = i * this.m[1] + e * this.m[3] + this.m[5]] }, transformVector: function(t, o) { var i = t,
                    e = o; return [t = i * this.m[0] + e * this.m[2], o = i * this.m[1] + e * this.m[3]] }, copy: function() {
                (new p).m = this.m.slice(0) } }, s = "undefined" != typeof self && self || void 0 !== o && o || this.content || this, n = s.Uint8Array, h = s.HTMLCanvasElement, r = h && h.prototype, l = /\s*;\s*base64\s*(?:;|$)/i, g = "toDataURL", n && (a = new n([62, -1, -1, -1, 63, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, -1, -1, -1, 0, -1, -1, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, -1, -1, -1, -1, -1, -1, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51])), !h || r.toBlob && r.toBlobHD || (r.toBlob || (r.toBlob = function(t, o) { if (o || (o = "image/png"), this.mozGetAsFile) t(this.mozGetAsFile("canvas", o));
            else if (this.msToBlob && /^\s*image\/png\s*(?:$|;)/i.test(o)) t(this.msToBlob());
            else { var i, e = Array.prototype.slice.call(arguments, 1),
                    s = this[g].apply(this, e),
                    h = s.indexOf(","),
                    r = s.substring(h + 1),
                    p = l.test(s.substring(0, h));
                Blob.fake ? ((i = new Blob).encoding = p ? "base64" : "URI", i.data = r, i.size = r.length) : n && (i = p ? new Blob([function(t) { for (var o, i, e = t.length, s = new n(e / 4 * 3 | 0), h = 0, r = 0, l = [0, 0], g = 0, p = 0; e--;) i = t.charCodeAt(h++), 255 !== (o = a[i - 43]) && void 0 !== o && (l[1] = l[0], l[0] = i, p = p << 6 | o, 4 == ++g && (s[r++] = p >>> 16, 61 !== l[1] && (s[r++] = p >>> 8), 61 !== l[0] && (s[r++] = p), g = 0)); return s }(r)], { type: o }) : new Blob([decodeURIComponent(r)], { type: o })), t(i) } }), !r.toBlobHD && r.toDataURLHD ? r.toBlobHD = function() { g = "toDataURLHD"; var t = this.toBlob(); return g = "toDataURL", t } : r.toBlobHD = r.toBlob),
        function(t) { var s, a, n = ["wheel", "mousewheel", "DOMMouseScroll"],
                h = "onwheel" in i || i.documentMode >= 9 ? ["wheel"] : ["mousewheel", "DomMouseScroll", "MozMousePixelScroll"]; if (t.event.fixHooks)
                for (var r = n.length; r;) t.event.fixHooks[n[--r]] = t.event.mouseHooks;

            function l(i) { var n, h, r = i || o.event,
                    l = [].slice.call(arguments, 1),
                    g = 0,
                    p = 0,
                    c = 0; return (i = t.event.fix(r)).type = "mousewheel", r.wheelDelta && (g = r.wheelDelta), r.detail && (g = -1 * r.detail), r.deltaY && (g = c = -1 * r.deltaY), r.deltaX && (g = -1 * (p = r.deltaX)), r.wheelDeltaY !== e && (c = r.wheelDeltaY), r.wheelDeltaX !== e && (p = -1 * r.wheelDeltaX), n = Math.abs(g), (!s || n < s) && (s = n), h = Math.max(Math.abs(c), Math.abs(p)), (!a || h < a) && (a = h), l.unshift(i, Math.floor(g / s), Math.floor(p / a), Math.floor(c / a)), (t.event.dispatch || t.event.handle).apply(this, l) }
            t.event.special.mousewheel = { setup: function() { if (this.addEventListener)
                        for (var t = h.length; t;) this.addEventListener(h[--t], l, !1);
                    else this.onmousewheel = l }, teardown: function() { if (this.removeEventListener)
                        for (var t = h.length; t;) this.removeEventListener(h[--t], l, !1);
                    else this.onmousewheel = null } }, t.fn.extend({ mousewheel: function(t) { return t ? this.bind("mousewheel", t) : this.trigger("mousewheel") }, unmousewheel: function(t) { return this.unbind("mousewheel", t) } }) }(t), t('<iframe id="ipgs-scrollbar-listener"/>').on("load", function() { var e = function() { if ("number" == typeof o.innerWidth) return o.innerWidth > i.documentElement.clientWidth; var t, e, s = i.documentElement || i.body;
                    void 0 !== s.currentStyle && (t = s.currentStyle.overflow), t = t || o.getComputedStyle(s, "").overflow, void 0 !== s.currentStyle && (e = s.currentStyle.overflowY), e = e || o.getComputedStyle(s, "").overflowY; var a = s.scrollHeight > s.clientHeight,
                        n = /^(visible|auto)$/.test(t) || /^(visible|auto)$/.test(e); return a && n || ("scroll" === t || "scroll" === e) },
                s = e(),
                a = null;
            this.contentWindow.addEventListener("resize", function() { clearTimeout(a), a = setTimeout(function() { e() ? s || (t(top.window).trigger("scrollbar", [!0]), s = !0) : s && (t(top.window).trigger("scrollbar", [!1]), s = !1) }, 100) }) }).appendTo("body"); var c = "ipages-instance",
        u = 0;

    function d(t, o) { this.root = t, this.config = o, this.leftPage = null, this.rightPage = null, this.leftBackPage = null, this.rightBackPage = null, this.leftBelowPage = null, this.rightBelowPage = null, this.$animation = null, this.swipe = { startY: 0, startX: 0, endY: 0, endX: 0, diffY: 0, diffX: 0, startTouch: !1, startAngle: 0, prevAngle: 0, angle: 0, angleThreshold: 30 } }

    function f(t, o) { this.root = t, this.config = o, this.prevPage = null, this.currPage = null, this.nextPage = null, this.$animation = null, this.swipe = { startY: 0, startX: 0, endY: 0, endX: 0, diffY: 0, diffX: 0, startTouch: !1, startAngle: 0, prevAngle: 0, angle: 0, angleThreshold: 30 } }

    function m(t, o) { this.root = t, this.config = o, this.prevPage = null, this.currPage = null, this.nextPage = null, this.$animation = null, this.swipe = { startY: 0, startX: 0, endY: 0, endX: 0, diffY: 0, diffX: 0, startTouch: !1, startOffset: 0, prevOffset: 0, offset: 0, offsetThreshold: 30 } }

    function v(t, o) { this.id = u++, this.util = new function() { this.isMobile = function() { return /Mobi|Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) }, this.transitionEvent = function() { var t = i.createElement("fakeelement"),
                    o = { transition: "transitionend", OTransition: "otransitionend", MozTransition: "transitionend", WebkitTransition: "webkitTransitionEnd" }; for (var s in o)
                    if (t.style[s] !== e) return o[s];
                return null }, this.animationEvent = function() { var t = i.createElement("fakeelement"),
                    o = { animation: "animationend", MSAnimationEnd: "msAnimationEnd", OAnimation: "oAnimationEnd", MozAnimation: "mozAnimationEnd", WebkitAnimation: "webkitAnimationEnd" }; for (var s in o)
                    if (t.style[s] !== e) return o[s];
                return null } }, this.$body = null, this.$container = null, this.config = null, this.bookWidth = 0, this.bookHeight = 0, this.pageWidth = 0, this.pageHeight = 0, this.currPage = 0, this.pageIndexPrev = 0, this.stagePadding = { top: 0, left: 0, right: 0, bottom: 0 }, this.pdf = null, this.matrix = new p, this.lastDelta = { x: 0, y: 0 }, this.lastScale = 0, this.tapped = null, this.pinchZoom = { zoom: 0, startDate: !1, aStartX: 0, aStartY: 0, aCurX: 0, aCurY: 0, aIsMoving: !1, bStartX: 0, bStartY: 0, bCurX: 0, bCurY: 0, bIsMoving: !1 }, this.dragNavigation = { target: null, startX: 0, startY: 0, x: 0, y: 0 }, this.thumbnailsScrollTimerId = null, this.thumbnailsScrollTimeout = 2e3, this.themeClass = null, this.engineClass = null, this.engine = null, this.ready = !1, this.controls = {}, this.pages = [], this.bookTransitionTimerId = null, this._init(t, o) }
    d.prototype = { _normalizePageIndex: function(t) { return t ? t < 0 ? 0 : t > this.root.pages.length - 1 ? this.root.pages.length - 1 : t : 0 }, _isPageLeft: function(t) { return !!(t % 2) }, _isPageRight: function(t) { return !this._isPageLeft(t) }, _getLeftPageIndex: function(t) { return this._isPageRight(t) && (t += -1), t < 0 || t > this.root.pages.length - 1 ? null : t }, _getRightPageIndex: function(t) { return this._isPageLeft(t) && (t += 1), t < 0 || t > this.root.pages.length - 1 ? null : t }, _getBackPageIndex: function(t) { return (t || 0 == t) && (t += this._isPageLeft(t) ? -1 : 1), t < 0 || t > this.root.pages.length - 1 ? null : t }, _getBelowPageIndex: function(t) { return (t || 0 == t) && (t += this._isPageLeft(t) ? -2 : 2), t < 0 || t > this.root.pages.length - 1 ? null : t }, _clearSwipe: function() { this.swipe.startY = 0, this.swipe.startX = 0, this.swipe.endY = 0, this.swipe.endX = 0, this.swipe.diffY = 0, this.swipe.diffX = 0, this.swipe.startAngle = 0, this.swipe.prevAngle = 0, this.swipe.angle = 0, this.swipe.startTouch = !1 }, _stopAnimation: function(t) { this.$animation && this.$animation.stop(!0, t || !1), this.$animation = null }, _setAngle: function(t) { t <= -180 ? t = -180 : t >= 180 && (t = 180); var o = Math.abs(t),
                i = (o > 90 ? 180 - o : o) / 300; if (t < 0) { if (null == this.rightBackPage) return; if (null != this.rightBelowPage && (this.root.pages[this.rightBelowPage].css({ display: "block", transform: "", "z-index": 1 }), this.root._setShowHidePageState(this.rightBelowPage, !0)), null != this.leftBelowPage && this.root.pages[this.leftBelowPage].css({ "z-index": 2 }), null != this.leftBackPage && this.root.pages[this.leftBackPage].css({ "z-index": 3 }), null != this.leftPage && this.root.pages[this.leftPage].css({ "z-index": 4 }), o > 90 ? (null != this.rightPage && (this.root.pages[this.rightPage].css({ display: "none" }), this.root._setShowHidePageState(this.rightPage, !1)), null != this.rightBackPage && (this.root.pages[this.rightBackPage].css({ display: "block", transform: "rotateY(" + (180 + t) + "deg) translateZ(0px)", "z-index": 7 }).$shadow.css({ opacity: i }), this.root._setShowHidePageState(this.rightBackPage, !0))) : (null != this.rightPage && (this.root.pages[this.rightPage].css({ display: "block", transform: "rotateY(" + t + "deg) translateZ(0px)", "z-index": 7 }).$shadow.css({ opacity: i }), this.root._setShowHidePageState(this.rightPage, !0)), null != this.rightBackPage && (this.root.pages[this.rightBackPage].css({ display: "none" }), this.root._setShowHidePageState(this.rightBackPage, !1))), null == this.leftPage) { if (o > 90) { var e = 1 - (o - 90) / 90,
                            s = s - this.root.pageWidth * this.root._getZoom() / 2 * e;
                        this.root.controls.$book.css({ transform: "translateX(" + s + "px)" }) } } else if (null == this.rightBelowPage && o < 90) { e = 1 - (90 - o) / 90, s = s + this.root.pageWidth * this.root._getZoom() / 2 * e;
                    this.root.controls.$book.css({ transform: "translateX(" + s + "px)" }) } } else if (t >= 0) { if (null == this.leftBackPage) return; if (null != this.leftBelowPage && (this.root.pages[this.leftBelowPage].css({ display: "block", transform: "", "z-index": 1 }), this.root._setShowHidePageState(this.leftBelowPage, !0)), null != this.rightBelowPage && this.root.pages[this.rightBelowPage].css({ "z-index": 2 }), null != this.rightBackPage && this.root.pages[this.rightBackPage].css({ "z-index": 3 }), null != this.rightPage && this.root.pages[this.rightPage].css({ "z-index": 4 }), o > 90 ? (null != this.leftPage && (this.root.pages[this.leftPage].css({ display: "none" }), this.root._setShowHidePageState(this.leftPage, !1)), null != this.leftBackPage && (this.root.pages[this.leftBackPage].css({ display: "block", transform: "rotateY(" + (-180 + t) + "deg) translateZ(0px)", "z-index": 7 }).$shadow.css({ opacity: i }), this.root._setShowHidePageState(this.leftBackPage, !0))) : (null != this.leftPage && (this.root.pages[this.leftPage].css({ display: "block", transform: "rotateY(" + t + "deg) translateZ(0px)", "z-index": 7 }).$shadow.css({ opacity: i }), this.root._setShowHidePageState(this.leftPage, !0)), null != this.leftBackPage && (this.root.pages[this.leftBackPage].css({ display: "none" }), this.root._setShowHidePageState(this.leftBackPage, !1))), null == this.leftBelowPage) { if (o < 90) { e = 1 - (90 - o) / 90, s = s - this.root.pageWidth * this.root._getZoom() / 2 * e;
                        this.root.controls.$book.css({ transform: "translateX(" + s + "px)" }) } } else if (null == this.rightPage && o > 90) { e = 1 - (o - 90) / 90, s = 0;
                    s += this.root.pageWidth * this.root._getZoom() / 2 * e, this.root.controls.$book.css({ transform: "translateX(" + s + "px)" }) } } }, _animateTurnPage: function(o, i) { var e = t.Deferred();
            this._stopAnimation(); var s = this,
                a = this.root.config.flipDuration / 180 * Math.abs(i - o); return this.$animation = t({ angle: o }), this.$animation.animate({ angle: i }, { duration: a, easing: "linear", done: function() { s.swipe.startAngle = 0, s.$animation = null; var t = null;
                    null != (t = 180 == i ? s.leftBackPage : -180 == i ? s.rightBackPage : null != s.leftPage ? s.leftPage : null != s.rightPage ? s.rightPage : null) && s.showPage(t), e.resolve() }, fail: function() { e.reject() }, step: function(t) { s.swipe.startAngle = t, s._setAngle(t) } }), e.promise() }, updateBook: function(o) { for (var i = !0, e = 0, s = this.root.pages.length; e < s; e++) { var a = this.root.pages[e];
                a.toggleClass("ipgs-left", !i).toggleClass("ipgs-right", i).removeClass("ipgs-show").addClass("ipgs-hide"), a.pageLeft = !i, a.pageRight = i, i = !i;
                t(".ipgs-page-data", a) }
            o && this.showPage(this.root.currPage) }, updateBookLayout: function() { var t = 0;
            0 == this.rightPage ? t -= this.root.pageWidth * this.root._getZoom() / 2 : this.leftPage == this.root.pages.length - 1 && (t += this.root.pageWidth * this.root._getZoom() / 2), this.root.controls.$book.css({ transform: "translateX(" + t + "px)" }); for (var o = 0, i = this.root.pages.length; o < i; o++) { var e = this.root.pages[o];
                e.css({ left: e.pageRight ? this.root.pageWidth * this.root._getZoom() - 1 : 0 }) } }, showPage: function(t) { t = this._normalizePageIndex(t); var o = this._getLeftPageIndex(t),
                i = this._getRightPageIndex(t),
                e = this._getBackPageIndex(o),
                s = this._getBackPageIndex(i),
                a = this._getBelowPageIndex(o),
                n = this._getBelowPageIndex(i);
            this.root._loadPageData(o), this.root._loadPageData(i), this.root.config.preloadNeighbours && (this.root._loadPageData(e), this.root._loadPageData(s), this.root._loadPageData(a), this.root._loadPageData(n)); for (var h = 0, r = this.root.pages.length; h < r; h++) { var l = this.root.pages[h],
                    g = "none",
                    p = 0,
                    c = !1;
                h != o && h != i || (g = "block", p = 1, c = !0), l.css({ display: g, top: 0, left: l.pageRight ? this.root.pageWidth * this.root._getZoom() : 0, transform: "", "z-index": p }), this.root._setShowHidePageState(h, c) }
            this.root.currPage = t, this.leftPage = o, this.rightPage = i, this.leftBackPage = e, this.rightBackPage = s, this.leftBelowPage = a, this.rightBelowPage = n, null != this.leftPage && this.root.pages[this.leftPage].$shadow.css({ opacity: 0 }), null != this.leftBackPage && this.root.pages[this.leftBackPage].$shadow.css({ opacity: 0 }), null != this.leftBelowPage && this.root.pages[this.leftBelowPage].$shadow.css({ opacity: 0 }), null != this.rightPage && this.root.pages[this.rightPage].$shadow.css({ opacity: 0 }), null != this.rightBackPage && this.root.pages[this.rightBackPage].$shadow.css({ opacity: 0 }), null != this.rightBelowPage && this.root.pages[this.rightBelowPage].$shadow.css({ opacity: 0 }), this.updateBookLayout(), this.root._onShowPage(t) }, gotoPage: function(t) { if (this._stopAnimation(!0), t = this._normalizePageIndex(t), this.leftPage != t && this.rightPage != t) { var o = t,
                    i = this.root.currPage > o ? 180 : -180;
                i < 0 ? (null != this.rightBackPage && this.root.pages[this.rightBackPage].css({ display: "none", transform: "", "z-index": 0 }), null != this.rightBelowPage && this.root.pages[this.rightBelowPage].css({ display: "none", transform: "", "z-index": 0 }), this._isPageLeft(o) ? (this.rightBackPage = o, this.rightBelowPage = this._getRightPageIndex(o)) : (this.rightBackPage = this._getLeftPageIndex(o), this.rightBelowPage = o)) : (null != this.leftBackPage && this.root.pages[this.leftBackPage].css({ display: "none", transform: "", "z-index": 0 }), null != this.leftBelowPage && this.root.pages[this.leftBelowPage].css({ display: "none", transform: "", "z-index": 0 }), this._isPageRight(o) ? (this.leftBackPage = o, this.leftBelowPage = this._getLeftPageIndex(o)) : (this.leftBackPage = this._getRightPageIndex(o), this.leftBelowPage = o)), this._animateTurnPage(0, i) } }, gotoNext: function() { null != this.rightBackPage && this.gotoPage(this.rightBackPage) }, gotoPrev: function() { null != this.leftBackPage && this.gotoPage(this.leftBackPage) }, onSwipeDown: function(t) { this.swipe.startY = this.swipe.endY = t.pageY, this.swipe.startX = this.swipe.endX = t.pageX, this.swipe.startTouch = !0, this._stopAnimation(), this.swipe.prevAngle = this.swipe.angle, this.swipe.angle = this.swipe.startAngle }, onSwipeMove: function(t) { this.swipe.startTouch && (this.swipe.endY = t.pageY, this.swipe.endX = t.pageX, this.swipe.diffY = this.swipe.endY - this.swipe.startY, this.swipe.diffX = this.swipe.endX - this.swipe.startX, this.swipe.prevAngle = this.swipe.angle, this.swipe.angle = this.swipe.startAngle + this.swipe.diffX / (this.root.controls.$bookWrap.width() / 2) * 180, this._setAngle(this.swipe.angle)) }, onSwipeUp: function(t) { if (this.swipe.startTouch) { this.swipe.startTouch = !1; var o = this.swipe.angle,
                    i = Math.abs(this.swipe.angle) < this.swipe.angleThreshold ? 0 : this.swipe.angle < 0 ? -180 : 180; if ((i < 0 && this.swipe.angle - this.swipe.prevAngle > 0 || i > 0 && this.swipe.angle - this.swipe.prevAngle < 0) && (i = 0), i == o || i > 0 && null == this.leftPage || i < 0 && null == this.rightPage) return void this._clearSwipe();
                this._animateTurnPage(o, i).always(function() {}) } } }, f.prototype = { _normalizePageIndex: function(t) { return t ? t < 0 ? 0 : t > this.root.pages.length - 1 ? this.root.pages.length - 1 : t : 0 }, _getPrevPageIndex: function(t) { return (t || 0 == t) && (t -= 1), t < 0 || t > this.root.pages.length - 1 ? null : t }, _getNextPageIndex: function(t) { return (t || 0 == t) && (t += 1), t < 0 || t > this.root.pages.length - 1 ? null : t }, _clearSwipe: function() { this.swipe.startY = 0, this.swipe.startX = 0, this.swipe.endY = 0, this.swipe.endX = 0, this.swipe.diffY = 0, this.swipe.diffX = 0, this.swipe.startAngle = 0, this.swipe.prevAngle = 0, this.swipe.angle = 0, this.swipe.startTouch = !1 }, _stopAnimation: function(t) { this.$animation && this.$animation.stop(!0, t || !1), this.$animation = null }, _setAngle: function(t) { t <= -90 ? t = -90 : t >= 90 && (t = 90);
            Math.abs(t); if (t < 0) { if (null == this.nextPage) return;
                null != this.prevPage && (this.root.pages[this.prevPage].css({ display: "none" }), this.root._setShowHidePageState(this.prevPage, !1)), null != this.currPage && (this.root.pages[this.currPage].css({ display: "block", transform: "rotateY(" + t + "deg) translateZ(0px)", "z-index": 2 }).$shadow.css({ opacity: 0 }), this.root._setShowHidePageState(this.currPage, !0)), null != this.nextPage && (this.root.pages[this.nextPage].css({ display: "block", transform: "", "z-index": 1 }), this.root._setShowHidePageState(this.nextPage, !0)) } else if (t >= 0) { if (null == this.prevPage) return;
                null != this.prevPage && (this.root.pages[this.prevPage].css({ display: "block", transform: "rotateY(" + (-90 + t) + "deg) translateZ(0px)", "z-index": 2 }).$shadow.css({ opacity: 0 }), this.root._setShowHidePageState(this.prevPage, !0)), null != this.currPage && (this.root.pages[this.currPage].css({ display: "block", transform: "", "z-index": 1 }), this.root._setShowHidePageState(this.currPage, !0)), null != this.nextPage && (this.root.pages[this.nextPage].css({ display: "none" }), this.root._setShowHidePageState(this.nextPage, !1)) } }, _animateTurnPage: function(o, i) { var e = t.Deferred();
            this._stopAnimation(); var s = this,
                a = this.root.config.flipDuration / 90 * Math.abs(i - o); return this.$animation = t({ angle: o }), this.$animation.animate({ angle: i }, { duration: a, easing: "linear", done: function() { s.swipe.startAngle = 0, s.$animation = null; var t = null;
                    null != (t = 90 == i ? s.prevPage : -90 == i ? s.nextPage : null != s.currPage ? s.currPage : null) && s.showPage(t), e.resolve() }, fail: function() { e.reject() }, step: function(t) { s.swipe.startAngle = t, s._setAngle(t) } }), e.promise() }, updateBook: function(o) { for (var i = 0, e = this.root.pages.length; i < e; i++) { var s = this.root.pages[i];
                s.toggleClass("ipgs-right", !0).removeClass("ipgs-show").addClass("ipgs-hide"), s.pageIndex = i;
                t(".ipgs-page-data", s) }
            o && this.showPage(this.root.currPage) }, updateBookLayout: function() {}, showPage: function(t) { var o = t = this._normalizePageIndex(t),
                i = this._getPrevPageIndex(o),
                e = this._getNextPageIndex(o);
            this.root._loadPageData(o), this.root.config.preloadNeighbours && (this.root._loadPageData(i), this.root._loadPageData(e)); for (var s = 0, a = this.root.pages.length; s < a; s++) { var n = "none",
                    h = 0,
                    r = !1;
                s == o && (n = "block", h = 1, r = !0), this.root.pages[s].css({ display: n, top: 0, left: 0, transform: "", "z-index": h }), this.root._setShowHidePageState(s, r) }
            this.root.currPage = t, this.currPage = o, this.prevPage = i, this.nextPage = e, null != this.currPage && this.root.pages[this.currPage].$shadow.css({ opacity: 0 }), null != this.prevPage && this.root.pages[this.prevPage].$shadow.css({ opacity: 0 }), null != this.nextPage && this.root.pages[this.nextPage].$shadow.css({ opacity: 0 }), this.updateBookLayout(), this.root._onShowPage(t) }, gotoPage: function(t) { if (this._stopAnimation(!0), t = this._normalizePageIndex(t), this.currPage != t) { var o = t,
                    i = this.currPage > o ? 90 : -90;
                i < 0 ? (null != this.prevPage && this.root.pages[this.prevPage].css({ display: "none", transform: "", "z-index": 0 }), this.nextPage = o) : (null != this.nextPage && this.root.pages[this.nextPage].css({ display: "none", transform: "", "z-index": 0 }), this.prevPage = o), this._animateTurnPage(0, i) } }, gotoNext: function() { null != this.nextPage && this.gotoPage(this.nextPage) }, gotoPrev: function() { null != this.prevPage && this.gotoPage(this.prevPage) }, onSwipeDown: function(t) { this.swipe.startY = this.swipe.endY = t.pageY, this.swipe.startX = this.swipe.endX = t.pageX, this.swipe.startTouch = !0, this._stopAnimation(), this.swipe.prevAngle = this.swipe.angle, this.swipe.angle = this.swipe.startAngle }, onSwipeMove: function(t) { this.swipe.startTouch && (this.swipe.endY = t.pageY, this.swipe.endX = t.pageX, this.swipe.diffY = this.swipe.endY - this.swipe.startY, this.swipe.diffX = this.swipe.endX - this.swipe.startX, this.swipe.prevAngle = this.swipe.angle, this.swipe.angle = this.swipe.startAngle + this.swipe.diffX / this.root.controls.$bookWrap.width() * 180, this._setAngle(this.swipe.angle)) }, onSwipeUp: function(t) { if (this.swipe.startTouch) { this.swipe.startTouch = !1; var o = this.swipe.angle,
                    i = Math.abs(this.swipe.angle) < this.swipe.angleThreshold ? 0 : this.swipe.angle < 0 ? -90 : 90; if ((i < 0 && this.swipe.angle - this.swipe.prevAngle > 0 || i > 0 && this.swipe.angle - this.swipe.prevAngle < 0) && (i = 0), i == o || i > 0 && null == this.prevPage || i < 0 && null == this.nextPage) return void this._clearSwipe();
                this._animateTurnPage(o, i).always(function() {}) } } }, m.prototype = { _normalizePageIndex: function(t) { return t ? t < 0 ? 0 : t > this.root.pages.length - 1 ? this.root.pages.length - 1 : t : 0 }, _getPrevPageIndex: function(t) { return (t || 0 == t) && (t -= 1), t < 0 || t > this.root.pages.length - 1 ? null : t }, _getNextPageIndex: function(t) { return (t || 0 == t) && (t += 1), t < 0 || t > this.root.pages.length - 1 ? null : t }, _clearSwipe: function() { this.swipe.startY = 0, this.swipe.startX = 0, this.swipe.endY = 0, this.swipe.endX = 0, this.swipe.diffY = 0, this.swipe.diffX = 0, this.swipe.startOffset = 0, this.swipe.prevOffset = 0, this.swipe.offset = 0, this.swipe.startTouch = !1 }, _stopAnimation: function(t) { this.$animation && this.$animation.stop(!0, t || !1), this.$animation = null }, _setOffset: function(t) { t <= -50 ? t = -50 : t >= 50 && (t = 50); var o = this.root.controls.$book.width(),
                i = this.root.controls.$bookWrap.width() / o;
            this.root.config.autoFit || this.root.config.responsive && i < 1 || (i = 1); var e = (e = this.root.$container.width() / 2 + this.root.pageWidth * i / 2) / i,
                s = this.config.pageFade ? Math.abs(t) / 50 : 1,
                a = this.config.pageFade ? 1 - s : 1; if ((t = e * t / 50) < 0) { if (null == this.nextPage) return;
                null != this.prevPage && (this.root.pages[this.prevPage].css({ display: "none" }), this.root._setShowHidePageState(this.prevPage, !1)), null != this.currPage && (this.root.pages[this.currPage].css({ display: "block", transform: "translateX(" + t + "px) translateZ(0px)", "z-index": 2, opacity: a }), this.root._setShowHidePageState(this.currPage, !0)), null != this.nextPage && (this.root.pages[this.nextPage].css({ display: "block", transform: "translateX(" + (e + t) + "px) translateZ(0px)", "z-index": 1, opacity: s }), this.root._setShowHidePageState(this.nextPage, !0)) } else if (t >= 0) { if (null == this.prevPage) return;
                null != this.prevPage && (this.root.pages[this.prevPage].css({ display: "block", transform: "translateX(" + (-e + t) + "px) translateZ(0px)", "z-index": 1, opacity: s }), this.root._setShowHidePageState(this.prevPage, !0)), null != this.currPage && (this.root.pages[this.currPage].css({ display: "block", transform: "translateX(" + t + "px) translateZ(0px)", "z-index": 2, opacity: a }), this.root._setShowHidePageState(this.currPage, !0)), null != this.nextPage && (this.root.pages[this.nextPage].css({ display: "none" }), this.root._setShowHidePageState(this.nextPage, !1)) } }, _animateSwipePage: function(o, i) { var e = t.Deferred();
            this._stopAnimation(); var s = this,
                a = this.root.config.flipDuration / 90 * Math.abs(i - o); return this.$animation = t({ offset: o }), this.$animation.animate({ offset: i }, { duration: a, easing: "linear", done: function() { s.swipe.startOffset = 0, s.$animation = null; var t = null;
                    null != (t = 50 == i ? s.prevPage : -50 == i ? s.nextPage : null != s.currPage ? s.currPage : null) && s.showPage(t), e.resolve() }, fail: function() { e.reject() }, step: function(t) { s.swipe.startOffset = t, s._setOffset(t) } }), e.promise() }, updateBook: function(o) { for (var i = 0, e = this.root.pages.length; i < e; i++) { var s = this.root.pages[i];
                s.removeClass("ipgs-show").addClass("ipgs-hide"), s.pageIndex = i;
                t(".ipgs-page-data", s) }
            o && this.showPage(this.root.currPage) }, updateBookLayout: function() {}, showPage: function(t) { var o = t = this._normalizePageIndex(t),
                i = this._getPrevPageIndex(o),
                e = this._getNextPageIndex(o);
            this.root._loadPageData(o), this.root.config.preloadNeighbours && (this.root._loadPageData(i), this.root._loadPageData(e)); for (var s = 0, a = this.root.pages.length; s < a; s++) { var n = "none",
                    h = 0,
                    r = !1;
                s == o && (n = "block", h = 1, r = !0), this.root.pages[s].css({ display: n, top: 0, left: 0, transform: "", opacity: "", "z-index": h }), this.root._setShowHidePageState(s, r) }
            this.root.currPage = t, this.currPage = o, this.prevPage = i, this.nextPage = e, null != this.currPage && this.root.pages[this.currPage].$shadow.css({ opacity: 0 }), null != this.prevPage && this.root.pages[this.prevPage].$shadow.css({ opacity: 0 }), null != this.nextPage && this.root.pages[this.nextPage].$shadow.css({ opacity: 0 }), this.updateBookLayout(), this.root._onShowPage(t) }, gotoPage: function(t) { if (this._stopAnimation(!0), t = this._normalizePageIndex(t), this.currPage != t) { var o = t,
                    i = this.currPage > o ? 50 : -50;
                i < 0 ? (null != this.prevPage && this.root.pages[this.prevPage].css({ display: "none", transform: "", "z-index": 0 }), this.nextPage = o) : (null != this.nextPage && this.root.pages[this.nextPage].css({ display: "none", transform: "", "z-index": 0 }), this.prevPage = o), this._animateSwipePage(0, i) } }, gotoNext: function() { null != this.nextPage && this.gotoPage(this.nextPage) }, gotoPrev: function() { null != this.prevPage && this.gotoPage(this.prevPage) }, onSwipeDown: function(t) { this.swipe.startY = this.swipe.endY = t.pageY, this.swipe.startX = this.swipe.endX = t.pageX, this.swipe.startTouch = !0, this._stopAnimation(), this.swipe.prevOffset = this.swipe.offset, this.swipe.offset = this.swipe.startOffset }, onSwipeMove: function(t) { this.swipe.startTouch && (this.swipe.endY = t.pageY, this.swipe.endX = t.pageX, this.swipe.diffY = this.swipe.endY - this.swipe.startY, this.swipe.diffX = this.swipe.endX - this.swipe.startX, this.swipe.prevOffset = this.swipe.offset, this.swipe.offset = this.swipe.startOffset + this.swipe.diffX / this.root.controls.$bookWrap.width() * 100, this._setOffset(this.swipe.offset)) }, onSwipeUp: function(t) { if (this.swipe.startTouch) { this.swipe.startTouch = !1; var o = (this.root.controls.$bookWrap.width() / 2 + this.root.pageWidth / 2) * this.swipe.offset / 50,
                    i = this.swipe.offset,
                    e = Math.abs(o) < this.swipe.offsetThreshold ? 0 : this.swipe.offset < 0 ? -50 : 50; if ((e < 0 && this.swipe.offset - this.swipe.prevOffset > 0 || e > 0 && this.swipe.offset - this.swipe.prevOffset < 0) && (e = 0), e == i || e > 0 && null == this.prevPage || e < 0 && null == this.nextPage) return void this._clearSwipe();
                this._animateSwipePage(i, e).always(function() {}) } } }, v.prototype = { VERSION: "1.3.4", defaults: { bookEngine: "TwoPageFlip", bookEnginePortrait: null, bookEngineLandscape: null, ratioPortraitToLandscape: 1.3, bookTheme: "default", pageWidth: 300, pageHeight: 360, pageStart: 1, pdfUrl: null, pdfAutoCreatePages: !1, pdfBookSizeFromDocument: !1, pdfDisableRangeRequests: !0, preloadNeighbours: !1, responsive: !0, autoFit: !1, autoHeight: !0, flipSound: !1, flipSoundUrl: null, perspective: 1500, padding: { top: 10, right: 10, bottom: 10, left: 10 }, flipDuration: 300, pageNumbers: !0, pageNumbersFirst: 1, pageNumbersHidden: [], pageImagesUrl: null, pageImagesFirst: 1, pageImagesCount: 0, prevnextButtons: !0, touchNavigation: !0, keyboardNavigation: !0, mouseDragNavigation: !0, mousePageClickNavigation: !1, mouseWheelNavigation: !1, mouseWheelPreventDefault: !0, zoom: 1, zoomMax: 7, zoomMin: 1, zoomStep: .05, zoomFocal: !0, dblClickZoomDefault: !1, mouseWheelZoom: !0, keyboardZoom: !0, pinchZoom: !0, pinchZoomCoef: .005, toolbar: !0, toolbarControls: [{ type: "share", active: !0, title: "share", icon: "ipgs-icon-share", optional: !1 }, { type: "outline", active: !0, title: "toggle outline/bookmarks", icon: "ipgs-icon-outline", optional: !1 }, { type: "thumbnails", active: !0, title: "toggle thumbnails", icon: "ipgs-icon-thumbnails", optional: !1 }, { type: "gotofirst", active: !0, title: "goto first page", icon: "ipgs-icon-gotofirst", optional: !1 }, { type: "prev", active: !0, title: "prev page", icon: "ipgs-icon-prev", optional: !1 }, { type: "pagenumber", active: !0, title: "goto page number", icon: "ipgs-icon-pagenumber", optional: !1 }, { type: "next", active: !0, title: "next page", icon: "ipgs-icon-next", optional: !1 }, { type: "gotolast", active: !0, title: "goto last page", icon: "ipgs-icon-gotolast", optional: !1 }, { type: "zoom-in", active: !0, title: "zoom in", icon: "ipgs-icon-zoom-in", optional: !1 }, { type: "zoom-out", active: !0, title: "zoom out", icon: "ipgs-icon-zoom-out", optional: !1 }, { type: "zoom-default", active: !0, title: "zoom default", icon: "ipgs-icon-zoom-default", optional: !0 }, { type: "optional", active: !0, title: "optional", icon: "ipgs-icon-optional", optional: !1 }, { type: "fullscreen", active: !0, title: "toggle fullscreen", icon: "ipgs-icon-fullscreen", optional: !0 }, { type: "sound", active: !0, title: "turn on/off flip sound", icon: "ipgs-icon-sound", optional: !0 }, { type: "download", active: !1, title: "download pdf", icon: "ipgs-icon-download", optional: !0 }], autoEnableThumbnails: !1, autoEnableOutline: !1, autoEnableShare: !1, bookmarks: [], shareControls: [{ type: "facebook", active: !0, title: "facebook", icon: "ipgs-share-icon-facebook" }, { type: "twitter", active: !0, title: "twitter", icon: "ipgs-share-icon-twitter" }, { type: "google", active: !0, title: "google+", icon: "ipgs-share-icon-google" }, { type: "linkedin", active: !0, title: "linkedin", icon: "ipgs-share-icon-linkedin" }, { type: "email", active: !0, title: "email", icon: "ipgs-share-icon-email" }], twoPageFlip: {}, onePageFlip: {}, onePageSwipe: { pageFade: !0 }, onLoad: null, txtFailedEngine: "Can not find the book engine module specified", txtPDFLoading: "Loading PDF document", txtPDFFailedToLoad: "Failed to load PDF document", txtShareDlgTitle: "Share" }, touchMouseEvent: { down: "touchmousedown", up: "touchmouseup", move: "touchmousemove" }, $body: null, util: null, _init: function(o, i) { this.$body = t("body"), this.$container = o, this.config = i, this.themeClass = i.bookTheme ? "ipgs-theme-" + i.bookTheme.toLowerCase() : null, this._create() }, _create: function() { this._buildDOM(), this._bind(); var o = this;

            function i() { switch (o.pageWidth = o.config.pageWidth, o.pageHeight = o.config.pageHeight, o.bookHeight = o.config.pageHeight, o.engineClass = "ipgs-" + o.config.bookEngine.toLowerCase(), o.engine = null, o.engineClass) {
                    case "ipgs-twopageflip":
                        o.bookWidth = 2 * o.config.pageWidth, o.engine = new d(o, t.extend(!0, {}, o.config.twoPageFlip)); break;
                    case "ipgs-onepageflip":
                        o.bookWidth = o.config.pageWidth, o.engine = new f(o, t.extend(!0, {}, o.config.onePageFlip)); break;
                    case "ipgs-onepageswipe":
                        o.bookWidth = o.config.pageWidth, o.engine = new m(o, t.extend(!0, {}, o.config.onePageSwipe)); break;
                    default:
                        return console.error(o.config.txtFailedEngine + " [" + o.engineClass + "]"), void o._updateLoadingInfo(o.config.txtFailedEngine) }
                o.controls.$book.css({ width: o.bookWidth, height: o.bookHeight }), o._initPages(), o._initThumbnails(), o._initBookmarks(), o._setZoom({ zoom: o.config.zoom }, !0, !0), o._updateSize(), o._updateBookEngine(), o._ready() } if (this.config.pdfUrl) { PDFJS.disableAutoFetch = !0, PDFJS.disableStream = !0, PDFJS.disableRange = o.config.pdfDisableRangeRequests, PDFJS.externalLinkTarget = PDFJS.LinkTarget.BLANK; var e = PDFJS.getDocument(this.config.pdfUrl);
                e.then(function(t) { o.pdf = t, o.config.pdfBookSizeFromDocument ? o.pdf.getPage(1).then(function(t) { var e = t.getViewport(1);
                        o.config.pageWidth = parseInt(e.width, 10), o.config.pageHeight = parseInt(e.height, 10), i() }, function() { i() }) : i() }, function(t) { console.error(t.message), o._updateLoadingInfo(o.config.txtPDFFailedToLoad) }), e.onProgress = function(t) { var i = 100 * t.loaded / t.total;
                    isNaN(i) ? t && t.loaded ? o._updateLoadingInfo(o.config.txtPDFLoading + " " + (Math.ceil(t.loaded / 1e4) / 100).toString() + "Mb") : o._updateLoadingInfo(o.config.txtPDFLoading) : o._updateLoadingInfo(o.config.txtPDFLoading + " " + i.toString().split(".")[0] + "%") } } else i() }, _ready: function() { if (this.config.onLoad) { var t = null; if ("string" == typeof this.config.onLoad) try { t = new Function(this.config.onLoad) } catch (t) { console.error("Can not compile onLoad function: " + t.message) } else "function" == typeof this.config.onLoad && (t = this.config.onLoad);
                t && t.call(this) }
            this.controls.$book.addClass("ipgs-no-transition"), this.$container.addClass("ipgs-ready"), this.ready = !0, this.$container.trigger("ipages:ready", [this]); var o = this;
            setTimeout(function() { o.controls.$book.removeClass("ipgs-no-transition") }, 1); var i = this.config.flipSound;
            this.config.flipSound = !1, this._showPage(this.config.pageStart - 1), this.config.flipSound = i, this.config.toolbar && (this.config.autoEnableThumbnails && this._onToggleThumbnails(), this.config.autoEnableOutline && this._onToggleOutline(), this.config.autoEnableShare && this._onToggleShare()) }, _buildDOM: function() { this.$container.addClass("ipgs").addClass(this.engineClass).addClass(this.themeClass), this.$container.wrapInner(t("<div></div>").addClass("ipgs-pages").css("display", "none")), this.controls.$stage = t("<div></div>").addClass("ipgs-stage").attr("tabindex", "1"), this.controls.$audio = t("<audio preload></audio>").addClass("ipgs-audio"), this.controls.$prevBtn = t("<div></div>").addClass("ipgs-prev-page"), this.controls.$nextBtn = t("<div></div>").addClass("ipgs-next-page"), this.controls.$stageMove = t("<div></div>").addClass("ipgs-stage-move"), this.controls.$bookLoading = t("<div></div>").addClass("ipgs-book-loading"), this.controls.$bookLoadingInfo = t("<div></div>").addClass("ipgs-book-loading-info"), this.controls.$bookTransform = t("<div></div>").addClass("ipgs-book-transform"), this.controls.$bookWrap = t("<div></div>").addClass("ipgs-book-wrap"), this.controls.$bookSize = t("<div></div>").addClass("ipgs-book-size"), this.controls.$book = t("<div></div>").addClass("ipgs-book").css({ perspective: this.config.perspective }), this.config.flipSoundUrl && this.controls.$audio.append(t('<source src="' + this.config.flipSoundUrl + '">')), this.controls.$bookSize.append(this.controls.$book), this.controls.$bookTransform.append(this.controls.$bookWrap), this.controls.$bookWrap.append(this.controls.$bookSize), this.controls.$stage.append(this.controls.$bookTransform, this.controls.$stageMove), this._updateStagePadding(this.config.padding), this.$container.append(this.controls.$stage, this.controls.$audio), this.config.prevnextButtons && this.$container.append(this.controls.$prevBtn, this.controls.$nextBtn), this._buildToolbarDOM(), this.$container.append(this.controls.$bookLoading, this.controls.$bookLoadingInfo), this.$container.is(":hidden") && this.$container.css("display", "block") }, _updateStagePadding: function(t) { "number" == typeof t ? (this.stagePadding.top = t, this.stagePadding.right = t, this.stagePadding.bottom = t, this.stagePadding.left = t) : (this.stagePadding.top = t.hasOwnProperty("top") ? t.top : 0, this.stagePadding.right = t.hasOwnProperty("right") ? t.right : 0, this.stagePadding.bottom = t.hasOwnProperty("bottom") ? t.bottom : 0, this.stagePadding.left = t.hasOwnProperty("left") ? t.left : 0) }, _buildToolbarDOM: function() { if (this.config.toolbar) { this.controls.$toolbar = t("<div></div>").addClass("ipgs-toolbar"), this.controls.toolbar = {}; for (var o = [], i = [], e = 0; e < this.config.toolbarControls.length; e++) { var s = this.config.toolbarControls[e],
                        a = t("<i></i>").addClass(s.icon),
                        n = t("<div></div>").addClass("ipgs-control").addClass("ipgs-control-" + s.type).addClass(s.active ? "" : "ipgs-hidden").attr("title", s.title).append(a); switch (n.on("click", t.proxy(this._onToolbarControlClick, this)), s.type) {
                        case "gotofirst":
                            this.controls.toolbar.$gotofirst = n, n.on("click", t.proxy(this._onPageFirst, this)); break;
                        case "prev":
                            this.controls.toolbar.$prev = n, n.on("click", t.proxy(this._onPagePrev, this)); break;
                        case "pagenumber":
                            this.controls.toolbar.$pagenumber = n, this.controls.toolbar.$pagenumber.empty(), this.controls.toolbar.$pagenumberLabel = t("<span></span>").addClass("ipgs-pagenumber-label"), this.controls.toolbar.$pagenumberInput = t("<input>").addClass("ipgs-pagenumber-input").attr("type", "text"), this.controls.toolbar.$pagenumberLabel.on("click", t.proxy(this._onPageNumberLabelClick, this)), this.controls.toolbar.$pagenumberInput.on("click", t.proxy(this._onPageNumberInputClick, this)), this.controls.toolbar.$pagenumberInput.on("keyup", t.proxy(this._onPageNumberInputKeyup, this)), this.controls.toolbar.$pagenumber.append(this.controls.toolbar.$pagenumberLabel, this.controls.toolbar.$pagenumberInput); break;
                        case "next":
                            this.controls.toolbar.$next = n, n.on("click", t.proxy(this._onPageNext, this)); break;
                        case "gotolast":
                            this.controls.toolbar.$gotolast = n, n.on("click", t.proxy(this._onPageLast, this)); break;
                        case "outline":
                            this.controls.$outline = t("<div></div>").addClass("ipgs-outline"), this.$container.append(this.controls.$outline), this.controls.$outline.on("click", ".ipgs-bookmark", t.proxy(this._onBookmarkClick, this)), this.controls.toolbar.$outline = n, n.on("click", t.proxy(this._onToggleOutline, this)); break;
                        case "thumbnails":
                            this.controls.$thumbnails = t("<div></div>").addClass("ipgs-thumbnails"), this.$container.append(this.controls.$thumbnails), this.controls.$thumbnails.on("scroll", t.proxy(this._onThumbnailsScroll, this)), this.controls.$thumbnails.on("click", ".ipgs-thumb", t.proxy(this._onThumbClick, this)), this.controls.toolbar.$thumbnails = n, n.on("click", t.proxy(this._onToggleThumbnails, this)); break;
                        case "zoom-in":
                            this.controls.toolbar.$zoomin = n, n.on("click", t.proxy(this._onZoomIn, this)); break;
                        case "zoom-out":
                            this.controls.toolbar.$zoomout = n, n.on("click", t.proxy(this._onZoomOut, this)); break;
                        case "zoom-default":
                            this.controls.toolbar.$zoomdefault = n, n.on("click", t.proxy(this._onZoomDefault, this)); break;
                        case "fullscreen":
                            this.controls.toolbar.$fullscreen = n, n.on("click", t.proxy(this._onToggleFullscreen, this)); break;
                        case "share":
                            this.controls.$share = t("<div></div>").addClass("ipgs-share"), this.controls.$shareDialog = t("<div></div>").addClass("ipgs-share-dialog"), this.controls.$shareHeader = t("<div></div>").addClass("ipgs-share-header").html(this.config.txtShareDlgTitle), this.controls.$shareControls = t("<div></div>").addClass("ipgs-share-controls"); for (var h = 0; h < this.config.shareControls.length; h++) { var r = this.config.shareControls[h]; if (r.active) { var l = t("<i></i>").addClass(r.icon),
                                        g = t("<div></div>").addClass("ipgs-share-control-" + s.type).attr("title", r.title).append(l);
                                    this.controls.$shareControls.append(g), g.on("click", t.proxy(this._onShareClick, this, r.type)) } }
                            this.controls.$shareDialog.append(this.controls.$shareHeader, this.controls.$shareControls), this.controls.$share.append(this.controls.$shareDialog), this.$container.append(this.controls.$share), this.controls.$share.on("click", t.proxy(this._onToggleShare, this)), this.controls.toolbar.$share = n, n.on("click", t.proxy(this._onToggleShare, this)); break;
                        case "optional":
                            this.controls.toolbar.$optional = n, this.controls.toolbar.$optionalBar = t("<div></div>").addClass("ipgs-optional-bar"), this.controls.toolbar.$optional.append(this.controls.toolbar.$optionalBar), n.on("click", t.proxy(this._onToggleOptional, this)); break;
                        case "download":
                            this.controls.toolbar.$download = n, n.on("click", t.proxy(this._onDownload, this)); break;
                        case "sound":
                            this.controls.toolbar.$sound = n, this.controls.toolbar.$sound.toggleClass("ipgs-disable", !this.config.flipSound), n.on("click", t.proxy(this._onToggleSound, this)) }
                    s.optional ? i.push(n) : o.push(n) } for (e = 0; e < o.length; e++) this.controls.$toolbar.append(o[e]); for (e = 0; e < i.length; e++) this.controls.toolbar.$optionalBar.append(i[e]);
                this.$container.append(this.controls.$toolbar) } }, _bind: function() { "ontouchstart" in o && this.config.touchNavigation && (this.controls.$stage.on("touchstart", t.proxy(this._onBookTouch, this)), this.controls.$stage.on("touchmove", t.proxy(this._onBookTouch, this)), this.controls.$stage.on("touchend", t.proxy(this._onBookTouch, this))), this.config.mouseDragNavigation && this.controls.$stage.on("mousedown", t.proxy(this._onBookMouse, this)), this.controls.$stage.on(this.touchMouseEvent.down, t.proxy(this._onSwipeDown, this)), this.controls.$stage.on(this.touchMouseEvent.move, t.proxy(this._onSwipeMove, this)), this.controls.$stage.on(this.touchMouseEvent.up, t.proxy(this._onSwipeUp, this)), this.config.mousePageClickNavigation && this.controls.$stage.on("click", t.proxy(this._onBookMouseClick, this)), this.config.mouseWheelNavigation && this.controls.$stage.on("mousewheel", t.proxy(this._onMouseWheelNavigation, this)), this.config.keyboardNavigation && this.controls.$stage.on("keydown", t.proxy(this._onKeyboardNavigation, this)), this.config.dblClickZoomDefault && (this.controls.$stage.on("dblclick", t.proxy(this._onDblClickZoomDefault, this)), this.controls.$stage.on("touchstart", t.proxy(this._onDblTapZoomDefault, this))), this.config.mouseWheelZoom && this.controls.$stage.on("mousewheel", t.proxy(this._onMouseWheelZoom, this)), this.config.keyboardZoom && this.controls.$stage.on("keydown", t.proxy(this._onKeyboardZoom, this)), this.config.pinchZoom && (this.controls.$stage.on("touchstart", t.proxy(this._onPinchZoomTouchStart, this)), this.controls.$stage.on("touchend", t.proxy(this._onPinchZoomTouchEnd, this))), this.config.prevnextButtons && (this.controls.$prevBtn.on("click", t.proxy(this._onPrevBtnClick, this)), this.controls.$nextBtn.on("click", t.proxy(this._onNextBtnClick, this))), (this.config.bookEngineLandscape || this.config.bookEnginePortrait) && t(o).on("orientationchange", t.proxy(this._onOrientationChange, this)), t(o).on("resize", t.proxy(this._onResize, this)), t(o).on("scrollbar", t.proxy(this._onScrollbar, this)), this.$container.on("fullscreenchange mozfullscreenchange webkitfullscreenchange msfullscreenchange", t.proxy(this._onFullScreenChange, this)) }, _unbind: function() { this.controls.$stage.off("touchstart", t.proxy(this._onBookTouch, this)), this.controls.$stage.off("touchmove", t.proxy(this._onBookTouch, this)), this.controls.$stage.off("touchend", t.proxy(this._onBookTouch, this)), this.controls.$stage.off("mousedown", t.proxy(this._onBookMouse, this)), this.controls.$stage.off(this.touchMouseEvent.down, t.proxy(this._onSwipeDown, this)), this.controls.$stage.off(this.touchMouseEvent.move, t.proxy(this._onSwipeMove, this)), this.controls.$stage.off(this.touchMouseEvent.up, t.proxy(this._onSwipeUp, this)), this.controls.$stage.off("click", t.proxy(this._onBookMouseClick, this)), this.controls.$stage.off("mousewheel", t.proxy(this._onMouseWheelNavigation, this)), this.controls.$stage.off("keydown", t.proxy(this._onKeyboardNavigation, this)), this.controls.$stage.off("dblclick", t.proxy(this._onDblClickZoomDefault, this)), this.controls.$stage.off("mousewheel", t.proxy(this._onMouseWheelZoom, this)), this.controls.$stage.off("keydown", t.proxy(this._onKeyboardZoom, this)), this.controls.$stage.off("touchstart", t.proxy(this._onPinchZoomTouchStart, this)), this.controls.$stage.off("touchend", t.proxy(this._onPinchZoomTouchEnd, this)), this.controls.$prevBtn.off("click", t.proxy(this._onPrevBtnClick, this)), this.controls.$nextBtn.off("click", t.proxy(this._onNextBtnClick, this)), t(o).off("orientationchange", t.proxy(this._onOrientationChange, this)), t(o).off("resize", t.proxy(this._onResize, this)), t(o).off("scrollbar", t.proxy(this._onScrollbar, this)), this.$container.off("fullscreenchange mozfullscreenchange webkitfullscreenchange msfullscreenchange", t.proxy(this._onFullScreenChange, this)) }, _replaceNumberTemplate: function(t, o) { if (t) { return o = "" + o, t.replace(/\{\{(x+)\}\}/g, function(t, i) { if (i.length > o.length) { for (var e = "", s = 0; s < i.length; s++) e += "0"; return (e + o).slice(-e.length) } return o }) } return t }, _createBlob: function(t, o) { return new Blob([t], { type: o }) }, _createObjectURL: function(t, o) { var i = this._createBlob(t, o); return URL.createObjectURL(i) }, _initThumbnails: function() { if (this.controls.$thumbnails)
                for (var o = this.pageHeight / this.pageWidth, i = .8 * this.controls.$thumbnails.outerWidth(), e = o * i, s = 0; s < this.pages.length; s++) { var a = this.pages[s],
                        n = t("<div></div>").addClass("ipgs-preloader"),
                        h = t("<div></div>").addClass("ipgs-number").text(s + 1),
                        r = t("<div></div>").css({ width: i + "px", height: e + "px" }).addClass("ipgs-thumb").addClass("ipgs-loading").attr("data-page-index", s).appendTo(this.controls.$thumbnails).append(n, h);
                    r.$number = h, r.thumbLoading = !1, r.thumbLoaded = !1, r.image = a.image, r.pdfPage = a.pdfPage, a.$thumb = r } }, _addBookmarks: function(o, i) { if (i && i.length > 0) { var e = t("<div></div>").addClass("ipgs-bookmarks").appendTo(o);
                o.addClass("ipgs-has-childs"); for (var s = 0; s < i.length; s++) { var a = i[s],
                        n = t("<div></div>").addClass("ipgs-state"),
                        h = t("<div></div>").addClass("ipgs-link").html(a.text),
                        r = t("<div></div>").addClass("ipgs-bookmark"),
                        l = a.target ? a.target : "page",
                        g = 0 != a.folded;
                    r.attr("data-link", a.link).attr("data-target", l).toggleClass("ipgs-folded", g), r.append(n, h).appendTo(e), this._addBookmarks(r, a.bookmarks) } } }, _initBookmarks: function() { this.controls.$outline && this._addBookmarks(this.controls.$outline, this.config.bookmarks) }, _initPages: function() { for (var o = this.$container.find(".ipgs-pages"), i = o.children(), e = 0, s = i.length; e < s; e++) t(i[e]).hasClass("ipgs-stage") || t(i[e]).hasClass("ipgs-toolbar") || this._addPage(i[e]); if (o.remove(), this.config.pdfAutoCreatePages && this.pdf)
                for (e = 0; e < this.pdf.numPages; e++) { var a = t("<div></div>").addClass("ipgs-no-come-back").attr("data-ipgs-pdf-page", e + 1);
                    this._addPage(a) }
            if (this.config.pageImagesUrl)
                for (e = 0; e < this.config.pageImagesCount; e++) { var n = this._replaceNumberTemplate(this.config.pageImagesUrl, this.config.pageImagesFirst + e);
                    a = t("<div></div>").addClass("ipgs-no-come-back").attr("data-ipgs-image", n);
                    this._addPage(a) }
            this.pages.length > 0 && (this.pages[0].addClass("ipgs-first"), this.pages[this.pages.length - 1].addClass("ipgs-last")); for (e = 0; e < this.pages.length; e++) this.pages[e].attr("data-page-number", e + 1);
            this._updateBook(!1) }, _addPage: function(o) { var i = t(o),
                e = t("<div></div>").addClass("ipgs-preloader"),
                s = t("<div></div>").addClass("ipgs-image"),
                a = t("<div></div>").addClass("ipgs-data"),
                n = t("<div></div>").addClass("ipgs-number"),
                h = t("<div></div>").addClass("ipgs-shadow"),
                r = t("<div></div>").css({ display: "none", width: this.pageWidth + "px", height: this.pageHeight + "px" }).addClass("ipgs-page").addClass("ipgs-loading").appendTo(this.controls.$book).append(s, a, n, h, e);
            r.$image = s, r.$data = a, r.$number = n, r.$shadow = h, r.$thumb = null, r.pageLoading = !1, r.pageLoaded = !1, r.zoom = this._getZoom(), r.image = i.data("ipgs-image"), r.pdfPage = i.data("ipgs-pdf-page"), r.showCSSClass = i.data("ipgs-showcssclass"), r.hideCSSClass = i.data("ipgs-hidecssclass"), i.hasClass("ipgs-no-come-back") || i.addClass("ipgs-come-back"), a.append(i), this.pages.push(r) }, _updateLoadingInfo: function(t) { this.controls.$bookLoadingInfo.text(t).addClass("ipgs-active") }, _updateBook: function(o) { for (var i = 0, e = this.pages.length; i < e; i++) { var s = this.pages[i]; if (s.pageIndex = i, s.pageNumber = this.config.pageNumbersFirst + i, this.config.pageNumbers) { var a = i + 1,
                        n = i - this.pages.length; - 1 == t.inArray(a, this.config.pageNumbersHidden) && -1 == t.inArray(n, this.config.pageNumbersHidden) ? s.$number.addClass("ipgs-show").text(s.pageNumber) : s.$number.removeClass("ipgs-show").text("") } }
            this.engine.updateBook(o) }, _updateSize: function() { var t = this._getZoom(),
                o = this.bookWidth,
                i = this.bookHeight,
                e = this.stagePadding.top,
                s = this.stagePadding.bottom,
                a = this.stagePadding.left,
                n = this.stagePadding.right,
                h = this.controls.$stage.outerWidth() - a - n; if (this.config.autoHeight) { var r = (d = i / o) * (!this.config.autoFit && h > o ? o : h) + e + s;
                this.$container.css({ height: r }) } var l, g, p, c, u = this.controls.$stage.outerHeight() - e - s,
                d = 1;
            (u = u <= 0 ? i : u, this.config.responsive && !this.config.autoFit) && ((o > h || i > u) && (d = (p = h / o) > (c = u / i) ? c : p));
            this.config.autoFit && (d = (p = h / o) > (c = u / i) ? c : p);
            l = (u - i * d) / 2, g = (h - o * d) / 2, this.controls.$bookTransform.css({ top: l + e + "px", left: g + a + "px" }), this.controls.$bookWrap.css({ width: o * d + "px", height: i * d + "px" }), this.controls.$bookWrap.get(0).offsetHeight, this.controls.$bookSize.css({ transform: "scale(" + 1 / t * d + ")" }), this._updateThumbnails(), this.engine.updateBookLayout() }, _updateBookEngine: function() { var t = this.config.bookEngineLandscape || this.config.bookEngine,
                o = this.config.bookEnginePortrait || this.config.bookEngine,
                i = this.stagePadding.top,
                e = this.stagePadding.bottom,
                s = this.stagePadding.left,
                a = this.stagePadding.right;
            (this.controls.$stage.outerWidth() - s - a) / (this.controls.$stage.outerHeight() - i - e) >= this.config.ratioPortraitToLandscape ? (this.$container.addClass("ipgs-landscape").removeClass("ipgs-portrait"), this.setBookEngine(t)) : (this.$container.addClass("ipgs-portrait").removeClass("ipgs-landscape"), this.setBookEngine(o)) }, _updateThumbnails: function() { this.controls.$thumbnails && this._onThumbnailsRefresh() }, _updateZoomPosition: function() { var t = this._getZoom();
            1 == t && this._setPosition({ x: 0, y: 0 }, !1); var o = this._getPosition();
            this.controls.$bookTransform.css({ transform: "translate3d(" + o.x + "px," + o.y + "px, 0) scale(" + t + ")" }), this.controls.$book.addClass("ipgs-no-transition"), this.controls.$book.css({ width: this.bookWidth * t + "px", height: this.bookHeight * t + "px" }); for (var i = 0; i < this.pages.length; i++) { var e = this.pages[i];
                e.css({ width: this.pageWidth * t + "px", height: this.pageHeight * t + "px" }), e.$data.css({ width: this.pageWidth + "px", height: this.pageHeight + "px", transform: "scale(" + t + ")" }), e.hasClass("ipgs-show") && this._loadPageData(e.pageIndex) }
            this._updateSize(); var s = this;
            clearTimeout(s.bookTransitionTimerId), s.bookTransitionTimerId = setTimeout(function() { s.controls.$book.removeClass("ipgs-no-transition") }, 300) }, _getPosition: function() { return { x: this.matrix.m[4], y: this.matrix.m[5] } }, _setPosition: function(t, o) { var i = t.x || 0,
                e = t.y || 0;
            this.matrix.m[4] = i, this.matrix.m[5] = e, o && this._updateZoomPosition() }, _setDeltaPosition: function(t) { var o = t.dx || 0,
                i = t.dy || 0,
                e = this.matrix.inverse().transformPoint(o, i),
                s = this.matrix.inverse().transformPoint(0, 0),
                a = e[0] - s[0],
                n = e[1] - s[1];
            this.matrix.translate(a, n), this._updateZoomPosition() }, _getZoom: function() { return this.matrix.m[0] }, _setZoom: function(t, o, i) { var e = t.zoom || 1e-6; if (null != this.config.zoomMin && (e = Math.max(this.config.zoomMin, e)), null != this.config.zoomMax && (e = Math.min(this.config.zoomMax, e)), i || e != this._getZoom()) { var s = this.matrix.m[4],
                    a = this.matrix.m[5];
                this.matrix.reset().translate(s, a).scale(e, e), o && this._updateZoomPosition() } }, _setDeltaZoom: function(t) { var o = t.zoom || 1,
                i = t.focalPoint || { x: this.matrix.m[4], y: this.matrix.m[5] };
            this.config.zoomFocal || (i = { x: this.matrix.m[4], y: this.matrix.m[5] }); var e = this.matrix.m[0] * o;
            null != this.config.zoomMin && e < this.config.zoomMin ? o = this.config.zoomMin / this.matrix.m[0] : null != this.config.zoomMax && e > this.config.zoomMax && (o = this.config.zoomMax / this.matrix.m[0]); var s = this.matrix.inverse().transformPoint(i.x, i.y),
                a = s[0],
                n = s[1];
            this.matrix.translate(a, n).scale(o, o).translate(-a, -n), this._updateZoomPosition() }, _zoomIn: function() { var t = this._getZoom() + this.config.zoomStep;
            this._setZoom({ zoom: t }, !0, !1) }, _zoomOut: function() { var t = this._getZoom() - this.config.zoomStep;
            this._setZoom({ zoom: t }, !0, !1) }, _setBackgroundImage: function(t, o) { t.$image ? (t.css({ "background-image": t.$image.css("background-image") }), t.$image.css({ "background-image": o ? "url(" + o + ")" : "none" })) : t.css({ "background-image": o ? "url(" + o + ")" : "none" }), t.pageLoading = !1, t.pageLoaded = !0, t.toggleClass("ipgs-loading", !t.pageLoaded) }, _loadPageData: function(o) { if (null != o) { var i = this.pages[o]; if (i.pdfPage && i.zoom != this._getZoom() && (i.zoom = this._getZoom(), i.pageLoaded = !1, i.pageLoading = !1), !i.pageLoaded && !i.pageLoading) { i.pageLoading = !0; var e = this; if (i.image) { var s = new Image;
                        s.onload = function() { e._setBackgroundImage(i, this.src), !i.$thumb || i.$thumb.pageLoaded || i.$thumb.pageLoading || e._setBackgroundImage(i.$thumb, this.src) }, s.src = i.image } else i.pdfPage ? e.pdf && (i.updateTimerId && clearTimeout(i.updateTimerId), i.updateTimerId = setTimeout(function() { e.pdf.getPage(i.pdfPage).then(function(o) { var s = o.getViewport(e.pageWidth * e._getZoom() / o.getViewport(1).width),
                                a = t('<canvas height="300px" width="300px">'),
                                n = a.get(0).getContext("2d");
                            a.get(0).width = s.width, a.get(0).height = s.height; var h = { canvasContext: n, viewport: s };
                            i.renderTask = o.render(h), i.renderTask.then(function() { a.get(0).toBlob(function(t) { var o = e._createObjectURL(t, t.type);
                                    e._setBackgroundImage(i, o), i.$thumb && e._loadThumbData(i.$thumb), a.remove() }) }) }) }, i.updateTimerId ? 300 : 1)) : (e._setBackgroundImage(i, ""), !i.$thumb || i.$thumb.pageLoaded || i.$thumb.pageLoading || e._setBackgroundImage(i.$thumb, "")) } } }, _loadThumbData: function(o) { if (!o.pageLoaded && !o.pageLoading) { o.pageLoading = !0; var i = this; if (o.image) { var e = new Image;
                    e.onload = function() { i._setBackgroundImage(o, this.src) }, e.src = o.image } else o.pdfPage ? i.pdf && i.pdf.getPage(o.pdfPage).then(function(e) { var s = e.getViewport(o.width() / e.getViewport(1).width),
                        a = t("<canvas>"),
                        n = a.get(0).getContext("2d");
                    a.get(0).width = o.width(), a.get(0).height = o.height(); var h = { canvasContext: n, viewport: s };
                    e.render(h).then(function() { a.get(0).toBlob(function(t) { var e = i._createObjectURL(t, t.type);
                            i._setBackgroundImage(o, e), a.remove() }) }) }) : i._setBackgroundImage(o, "") } }, _showPage: function(t) { 0 != this.pages.length && this.engine.showPage(t) }, _gotoPage: function(t) { 0 != this.pages.length && this.engine.gotoPage(t) }, _gotoPrev: function() { this.engine.gotoPrev() }, _gotoNext: function() { this.engine.gotoNext() }, _setShowHidePageState: function(t, o) { var i = this.pages[t];
            o ? i.hasClass("ipgs-hide") && (i.removeClass("ipgs-hide"), i.get(0).offsetHeight, i.addClass("ipgs-show"), i.removeClass(i.hideCSSClass).addClass(i.showCSSClass), this._loadPageData(t), this.$container.trigger("ipages:showpage", [this, t])) : i.hasClass("ipgs-show") && (i.removeClass("ipgs-show"), i.get(0).offsetHeight, i.addClass("ipgs-hide"), i.removeClass(i.showCSSClass).addClass(i.hideCSSClass), this.$container.trigger("ipages:hidepage", [this, t])), this.config.prevnextButtons && this.pages.length > 0 && (this.controls.$prevBtn.toggleClass("ipgs-active", !this.pages[0].hasClass("ipgs-show")), this.controls.$nextBtn.toggleClass("ipgs-active", !this.pages[this.pages.length - 1].hasClass("ipgs-show"))) }, _normalizeEvent: function(o, i, e, s) { return t.Event(o, { pageX: e, pageY: s, originalEvent: i }) }, _onShowPage: function(t) { if (this.config.flipSound && this.pageIndexPrev != t) { var o = this.controls.$audio.get(0);
                o.pause(), o.currentTime = 0, o.play() } if (this.config.toolbar)
                if ("ipgs-twopageflip" == this.engineClass) { var i, e = 0;
                    i = (e = (t + 1) % 2 == 0 || t + 1 == 1 || t + 1 == this.pages.length ? t + 1 : t) > 1 && e < this.pages.length ? "-" + (e + 1) : "", this.controls.toolbar.$pagenumberLabel.text(e + i + "/" + this.pages.length) } else this.controls.toolbar.$pagenumberLabel.text(t + 1 + "/" + this.pages.length);
            this.pageIndexPrev = t }, _onResize: function() { this.ready && (this._updateSize(), this._updateBookEngine()) }, _onScrollbar: function(t, o) { o && this.ready && (this._updateSize(), this._updateBookEngine()) }, _onOrientationChange: function() { this._updateBookEngine() }, _onBookTouch: function(o) { if (!t(o.target).is("a")) { var i; switch (o.type) {
                    case "touchstart":
                        i = this.touchMouseEvent.down; break;
                    case "touchend":
                        i = this.touchMouseEvent.up; break;
                    case "touchmove":
                        o.preventDefault(), o.stopPropagation(), i = this.touchMouseEvent.move; break;
                    default:
                        return } var e, s = o.originalEvent.touches[0];
                e = i == this.touchMouseEvent.up ? this._normalizeEvent(i, o, null, null) : this._normalizeEvent(i, o, s.pageX, s.pageY), t(o.target).trigger(e) } }, _onBookMouse: function(o) { if (!t(o.target).is("a")) { o.preventDefault(), o.stopPropagation(); var i, e = !1; switch (o.type) {
                    case "mousedown":
                        i = this.touchMouseEvent.down, this.dragNavigation.target = o.target, this.dragNavigation.startX = this.dragNavigation.x = o.pageX, this.dragNavigation.startY = this.dragNavigation.y = o.pageY, this.controls.$stageMove.addClass("ipgs-active"), this.controls.$stageMove.on("mouseup", t.proxy(this._onBookMouse, this)), this.controls.$stageMove.on("mouseout", t.proxy(this._onBookMouse, this)), this.controls.$stageMove.on("mousemove", t.proxy(this._onBookMouse, this)), this.controls.$stage.focus(); break;
                    case "mouseup":
                        this.dragNavigation.startX == this.dragNavigation.x && this.dragNavigation.startY == this.dragNavigation.y && (e = !0);
                    case "mouseout":
                        i = this.touchMouseEvent.up, this.controls.$stageMove.removeClass("ipgs-active"), this.controls.$stageMove.off("mouseup", t.proxy(this._onBookMouse, this)), this.controls.$stageMove.off("mouseout", t.proxy(this._onBookMouse, this)), this.controls.$stageMove.off("mousemove", t.proxy(this._onBookMouse, this)); break;
                    case "mousemove":
                        i = this.touchMouseEvent.move, this.dragNavigation.x = o.pageX, this.dragNavigation.y = o.pageY; break;
                    default:
                        return } var s = this._normalizeEvent(i, o, o.pageX, o.pageY);
                t(o.target).trigger(s), e && this.controls.$stage.trigger("click", [this.dragNavigation.target]) } }, _onSwipeDown: function(t) { this.lastDelta = { x: t.pageX, y: t.pageY }, this.controls.$bookTransform.addClass("ipgs-no-transition"), 1 == this._getZoom() && this.engine.onSwipeDown(t) }, _onSwipeMove: function(t) { 1 == this._getZoom() ? this.engine.onSwipeMove(t) : (this._setDeltaPosition({ dx: t.pageX - this.lastDelta.x, dy: t.pageY - this.lastDelta.y }), this.lastDelta.x = t.pageX, this.lastDelta.y = t.pageY) }, _onSwipeUp: function(t) { this.controls.$bookTransform.removeClass("ipgs-no-transition"), 1 == this._getZoom() && this.engine.onSwipeUp(t) }, _onBookMouseClick: function(o, i) { i = i || o.target; var e = t(i).closest(".ipgs-page"); if (e.length) switch (this.engineClass) {
                case "ipgs-twopageflip":
                    e.data("page-number") % 2 == 0 ? this._gotoPrev() : this._gotoNext(); break;
                case "ipgs-onepageflip":
                case "ipgs-onepageswipe":
                    this._gotoNext() } }, _onPrevBtnClick: function(t) { t.preventDefault(), t.stopPropagation(), this.controls.$stage.focus(), this._gotoPrev() }, _onNextBtnClick: function(t) { t.preventDefault(), t.stopPropagation(), this.controls.$stage.focus(), this._gotoNext() }, _onKeyboardNavigation: function(t) { switch (t.which) {
                case 37:
                    this.gotoPrev(); break;
                case 39:
                    this.gotoNext() } }, _onMouseWheelNavigation: function(t, o) { this.config.mouseWheelPreventDefault && (t.preventDefault(), t.stopPropagation()), o < 0 ? this.gotoPrev() : this.gotoNext() }, _onDblClickZoomDefault: function(t) { this._setZoom({ zoom: 1 }, !0, !1) }, _onDblTapZoomDefault: function(t) { if (this.tapped) clearTimeout(this.tapped), this.tapped = null, this._setZoom({ zoom: 1 }, !0, !1);
            else { var o = this;
                this.tapped = setTimeout(function() { o.tapped = null }, 300) } }, _onMouseWheelZoom: function(t, o) { this.config.mouseWheelPreventDefault && (t.preventDefault(), t.stopPropagation()); var i, e = this.controls.$stage.get(0).getBoundingClientRect(),
                s = t.clientX,
                a = t.clientY,
                n = 1 + .1 * o;
            s -= e.left, a -= e.top, i = { x: s - (e.right - e.left) / 2, y: a - (e.bottom - e.top) / 2 }, this._setDeltaZoom({ zoom: n, focalPoint: i }) }, _onKeyboardZoom: function(t) { switch (t.which) {
                case 189:
                case 109:
                    var o = this._getZoom() - this.config.zoomStep;
                    this._setZoom({ zoom: o }, !0, !1); break;
                case 187:
                case 107:
                    o = this._getZoom() + this.config.zoomStep;
                    this._setZoom({ zoom: o }, !0, !1) } }, _onPinchZoomTouchStart: function(o) { this.pinchZoom.aStart = o.originalEvent.touches[0] && o.originalEvent.touches.length > 1, this.pinchZoom.bStart = o.originalEvent.touches[1], !this.pinchZoom.aIsMoving && !this.pinchZoom.bIsMoving && this.pinchZoom.aStart && this.pinchZoom.bStart && (o.preventDefault(), o.stopPropagation(), this.controls.$stage.focus(), this.controls.$bookTransform.addClass("ipgs-no-transition"), this.pinchZoom.aStartX = o.originalEvent.touches[0].pageX, this.pinchZoom.aStartY = o.originalEvent.touches[0].pageY, this.pinchZoom.bStartX = o.originalEvent.touches[1].pageX, this.pinchZoom.bStartY = o.originalEvent.touches[1].pageY, this.controls.$stage.on("touchmove", t.proxy(this._onPinchZoomTouchMove, this)), this.pinchZoom.zoom = this._getZoom(), this.pinchZoom.startDate = (new Date).getTime(), this.pinchZoom.aCurX = this.pinchZoom.aStartX, this.pinchZoom.aCurY = this.pinchZoom.aStartY, this.pinchZoom.bCurX = this.pinchZoom.bStartX, this.pinchZoom.bCurY = this.pinchZoom.bStartY, this.pinchZoom.aIsMoving = !0, this.pinchZoom.bIsMoving = !0) }, _onPinchZoomTouchMove: function(t) { if (this.pinchZoom.aIsMoving || this.pinchZoom.bIsMoving) { this.pinchZoom.aCurX = t.originalEvent.touches[0].pageX, this.pinchZoom.aCurY = t.originalEvent.touches[0].pageY, this.pinchZoom.bCurX = t.originalEvent.touches[1].pageX, this.pinchZoom.bCurY = t.originalEvent.touches[1].pageY; var o = (new Date).getTime(),
                    i = (this.pinchZoom.startDate, this.pinchZoom.aCurX),
                    e = this.pinchZoom.aCurY,
                    s = this.pinchZoom.bCurX,
                    a = this.pinchZoom.bCurY,
                    n = i - this.pinchZoom.aStartX,
                    h = e - this.pinchZoom.aStartY,
                    r = s - this.pinchZoom.bStartX,
                    l = a - this.pinchZoom.bStartY,
                    g = (Math.abs(n), Math.abs(h), Math.abs(r), Math.abs(l), Math.sqrt((this.pinchZoom.aStartX - this.pinchZoom.bStartX) * (this.pinchZoom.aStartX - this.pinchZoom.bStartX) + (this.pinchZoom.aStartY - this.pinchZoom.bStartY) * (this.pinchZoom.aStartY - this.pinchZoom.bStartY)) - Math.sqrt((i - s) * (i - s) + (e - a) * (e - a))),
                    p = this.pinchZoom.zoom - g * this.config.pinchZoomCoef;
                this._setZoom({ zoom: p }, !0, !1) } }, _onPinchZoomTouchEnd: function(o) { o.preventDefault(), o.stopPropagation(), this.controls.$stage.off("touchmove", t.proxy(this._onPinchZoomTouchMove, this)), this.controls.$bookTransform.addClass("ipgs-no-transition"), this._pinchZoomReset() }, _pinchZoomReset: function() { this.pinchZoom.aStartX = !1, this.pinchZoom.aStartY = !1, this.pinchZoom.bStartX = !1, this.pinchZoom.bStartY = !1, this.pinchZoom.startDate = !1, this.pinchZoom.aIsMoving = !1, this.pinchZoom.bIsMoving = !1 }, _onToolbarControlClick: function(t) { this.controls.$stage.focus() }, _onPageFirst: function(t) { this.gotoPage(0) }, _onPagePrev: function(t) { this.gotoPrev() }, _pageNumberInputShow: function() { this.controls.toolbar.$pagenumber.addClass("ipgs-pagenumber-input"), this.controls.toolbar.$pagenumberInput.focus().val(this.currPage + 1) }, _pageNumberInputHide: function() { this.controls.toolbar.$pagenumber.removeClass("ipgs-pagenumber-input") }, _pageNumberInputUpdate: function() { var t = parseInt(this.controls.toolbar.$pagenumberInput.val(), 10);
            t <= 0 ? t = 1 : t > this.pages.length ? t = this.pages.length : isNaN(t) && (t = this.currPage + 1), this.controls.toolbar.$pagenumberInput.val(t), this.gotoPage(t) }, _onPageNumberLabelClick: function(o) { o.preventDefault(), o.stopPropagation(), this.$body.one("click", t.proxy(this._onPageNumberInputHide, this)), this._pageNumberInputShow() }, _onPageNumberInputClick: function(t) { t.preventDefault(), t.stopPropagation() }, _onPageNumberInputHide: function(t) { this._pageNumberInputUpdate(), this._pageNumberInputHide() }, _onPageNumberInputKeyup: function(o) { 13 == o.which && this._pageNumberInputUpdate(), 27 == o.which && (this.$body.off("click", t.proxy(this._onPageNumberInputHide, this)), this._pageNumberInputHide()) }, _onPageNext: function(t) { this.gotoNext() }, _onPageLast: function(t) { this.gotoPage(this.pages.length) }, _onToggleThumbnails: function(t) { this.controls.$thumbnails.toggleClass("ipgs-active"), this.controls.toolbar.$thumbnails.toggleClass("ipgs-active"), this.controls.$thumbnails.hasClass("ipgs-active") && this._onThumbnailsScroll(), this.controls.$outline.hasClass("ipgs-active") && (this.controls.$outline.toggleClass("ipgs-active"), this.controls.toolbar.$outline.toggleClass("ipgs-active")) }, _onThumbnailsScroll: function(o) { clearTimeout(this.thumbnailsScrollTimerId), this.thumbnailsScrollTimerId = setTimeout(t.proxy(this._onThumbnailsRefresh, this), this.thumbnailsScrollTimeout) }, _onThumbnailsRefresh: function() { if (this.controls.$thumbnails.hasClass("ipgs-active") && 0 != this.pages.length)
                for (var t = this.controls.$thumbnails.find(".ipgs-thumb:first-child").outerHeight(!0), o = this.controls.$thumbnails.outerHeight(), i = this.controls.$thumbnails.scrollTop(), e = i + o, s = Math.floor(i / t), a = Math.floor(e / t), n = s; n <= a && n < this.pages.length; n++) this._loadThumbData(this.pages[n].$thumb) }, _onThumbClick: function(o) { o.preventDefault, o.stopPropagation(); var i = t(o.target).data("page-index");
            this._gotoPage(i) }, _onToggleOutline: function(t) { this.controls.$outline.toggleClass("ipgs-active"), this.controls.toolbar.$outline.toggleClass("ipgs-active"), this.controls.$thumbnails.hasClass("ipgs-active") && (this.controls.$thumbnails.toggleClass("ipgs-active"), this.controls.toolbar.$thumbnails.toggleClass("ipgs-active")) }, _onBookmarkClick: function(o) { o.preventDefault, o.stopPropagation(); var i = t(o.currentTarget); if (t(o.target).is(".ipgs-state")) i.toggleClass("ipgs-folded");
            else { var e = i.data("link"),
                    s = i.data("target"); if (e)
                    if ("page" == s) { var a = parseInt(e, 10); if (isNaN(a)) return;
                        a < 0 ? a += this.pages.length : a -= 1, this._gotoPage(a) } else { s = "_" + s; var n = t("<a></a>").attr("href", e).attr("target", s);
                        this.$body.append(n), n.get(0).click(), n.remove() } } }, _onZoomIn: function(t) { this._zoomIn() }, _onZoomOut: function(t) { this._zoomOut() }, _onZoomDefault: function(t) { this._setZoom({ zoom: 1 }, !0, !1) }, _onToggleOptional: function(t) { this.controls.toolbar.$optional.toggleClass("ipgs-active"), this.controls.toolbar.$optionalBar.toggleClass("ipgs-active") }, _onToggleSound: function(t) { this.config.flipSound = !this.config.flipSound, this.controls.toolbar.$sound.toggleClass("ipgs-disable", !this.config.flipSound) }, _onFullScreenChange: function(t) { i.fullscreen || i.mozFullScreen || i.webkitIsFullScreen || i.msFullscreenElement ? (this.$container.addClass("ipgs-fullscreen"), this.$container.get(0).offsetHeight, this.controls.toolbar.$fullscreen && this.controls.toolbar.$fullscreen.addClass("ipgs-active")) : (this.$container.removeClass("ipgs-fullscreen"), this.$container.get(0).offsetHeight, this.controls.toolbar.$fullscreen && this.controls.toolbar.$fullscreen.removeClass("ipgs-active")); var o = this;
            setTimeout(function() { o._onResize() }, 100) }, _onToggleFullscreen: function(t) { if (this.$container.hasClass("ipgs-fullscreen")) try { i.exitFullscreen ? i.exitFullscreen() : i.mozCancelFullScreen ? i.mozCancelFullScreen() : i.webkitCancelFullScreen ? i.webkitCancelFullScreen() : i.msExitFullscreen && i.msExitFullscreen() } catch (t) { console.error("The browser does not support the fullscreen API") } else try { var o = this.$container.get(0);
                o.requestFullscreen ? o.requestFullscreen() : o.mozRequestFullScreen ? o.mozRequestFullScreen() : o.webkitRequestFullscreen ? o.webkitRequestFullscreen() : o.msRequestFullscreen && o.msRequestFullscreen() } catch (t) { console.error("The browser does not support the fullscreen API") } }, _onDownload: function(o) { if (this.config.pdfUrl) { var i = this.config.pdfUrl.substring(this.config.pdfUrl.lastIndexOf("/") + 1, this.config.pdfUrl.length),
                    e = t("<a></a>").attr("href", this.config.pdfUrl).attr("download", i);
                this.$body.append(e), e.get(0).click(), e.remove() } }, _getShareUrl: function() { return o.location.href }, _buildUrl: function(t, o) { var i = 0; for (var e in o) t += (i ? "&" : "") + e + "=" + encodeURIComponent(o[e]), i++; return t }, _onToggleShare: function(t) { if (t) { t.preventDefault(), t.stopPropagation(); var o = t.toElement || t.relatedTarget;
                0 !== this.controls.$shareDialog.has(o).length || this.controls.$shareDialog.is(o) || (this.controls.$share.toggleClass("ipgs-active"), this.controls.toolbar.$share.toggleClass("ipgs-active")) } else this.controls.$share.toggleClass("ipgs-active"), this.controls.toolbar.$share.toggleClass("ipgs-active") }, _executeShareUrl: function(o) { var i = t("<a></a>").attr("href", o).attr("target", "_blank");
            this.$body.append(i), i.get(0).click(), i.remove() }, _onShareClick: function(t, o) { var i = "",
                e = {}; switch (t) {
                case "facebook":
                    i = "http://www.facebook.com/sharer.php?", e = { u: this._getShareUrl() }; break;
                case "twitter":
                    i = "http://twitter.com/share?", e = { url: this._getShareUrl() }; break;
                case "google":
                    i = "https://plus.google.com/share?", e = { url: this._getShareUrl() }; break;
                case "linkedin":
                    i = "http://www.linkedin.com/shareArticle?", e = { mini: "true", url: this._getShareUrl() }; break;
                case "email":
                    i = "mailto:?", e = { subject: "", body: this._getShareUrl() }; break;
                default:
                    return }
            this._executeShareUrl(this._buildUrl(i, e)) }, _destroy: function() { var o = this.$container,
                i = this.$container.find(".ipgs-come-back");
            o.removeClass("ipgs ipgs-ready").removeClass(this.engineClass).removeClass(this.themeClass).empty(), t(i).each(function() { o.append(t(this).removeClass("ipgs-come-back")) }), this._unbind() }, gotoPage: function(t) { this._gotoPage(t - 1) }, gotoNext: function() { this._gotoNext() }, gotoPrev: function() { this._gotoPrev() }, zoomIn: function() { this._zoomIn() }, zoomOut: function() { this._zoomOut() }, zoomDefault: function() { this._setZoom({ zoom: 1 }, !0, !1) }, setBookEngine: function(o) { var i = o ? "ipgs-" + o.toLowerCase() : null; if (this.engineClass == i) return !1; switch (i) {
                case "ipgs-twopageflip":
                case "ipgs-onepageflip":
                case "ipgs-onepageswipe":
                    break;
                default:
                    return console.error(this.config.txtFailedEngine + " [" + o + "]"), !1 }
            this.controls.$bookTransform.addClass("ipgs-no-transition"), this.controls.$book.addClass("ipgs-no-transition"), this.$container.removeClass(this.engineClass), this.engineClass = i, this.$container.addClass(this.engineClass); for (var e = 0, s = this.pages.length; e < s; e++) { var a = this.pages[e];
                a.removeClass("ipgs-left").removeClass("ipgs-right"), a.css({ left: "" }) } switch (this.controls.$book.css({ transform: "" }), this.engineClass) {
                case "ipgs-twopageflip":
                    this.bookWidth = 2 * this.config.pageWidth, this.engine = new d(this, t.extend(!0, {}, this.config.twoPageFlip)); break;
                case "ipgs-onepageflip":
                    this.bookWidth = this.config.pageWidth, this.engine = new f(this, t.extend(!0, {}, this.config.onePageFlip)); break;
                case "ipgs-onepageswipe":
                    this.bookWidth = this.config.pageWidth, this.engine = new m(this, t.extend(!0, {}, this.config.onePageSwipe)) }
            this.controls.$book.css({ width: this.bookWidth }), this.pages.length > 0 && this._updateBook(1), this._updateSize(), this.controls.$bookTransform.removeClass("ipgs-no-transition"), this.controls.$book.removeClass("ipgs-no-transition") } }, t.fn.ipages = function(o, e) { if ("instance" == o) { var s = t(this).data(c); return s || void console.error('Calling "instance" method on not initialized instance is forbidden') } return this.each(function() { var e = t(this),
                s = e.data(c),
                a = e.data("json"),
                n = e.data("pdf-src"),
                h = e.data("pdf-disable-range-requests"),
                r = e.data("book-engine"),
                l = parseInt(e.data("page-width"), 10),
                g = parseInt(e.data("page-height"), 10),
                p = t.isPlainObject(o) ? o : a ? null : {}; if ("destroy" == o) return s ? (e.removeData(c), void s._destroy()) : void console.error('Calling "destroy" method on not initialized instance is forbidden');

            function u() { var o = t.extend(!0, {}, v.prototype.defaults, p);

                function a(o, i) { for (var e = [], s = 0; s < i.length; s++)
                        for (var a = i[s], n = 0; n < o.length; n++) { if ((r = o[n]).type == a.type) { var h = t.extend(!0, {}, r, a);
                                e.push(h) } }
                    for (s = 0; s < o.length; s++) { var r = o[s],
                            l = !0; for (n = 0; n < i.length; n++) { a = i[n]; if (r.type == a.type) { l = !1; break } } if (l) { h = t.extend(!0, {}, r);
                            e.push(h) } } return e } if (o.bookEngine = r || o.bookEngine, o.pageWidth = isNaN(l) ? o.pageWidth : l, o.pageHeight = isNaN(g) ? o.pageHeight : g, "boolean" == typeof h && (o.pdfDisableRangeRequests = h), null == o.pdfUrl && n && (o.pdfUrl = n, o.pdfAutoCreatePages = !0, o.pdfBookSizeFromDocument = !0), p.toolbarControls && p.toolbarControls instanceof Array && (o.toolbarControls = a(v.prototype.defaults.toolbarControls, p.toolbarControls)), p.shareControls && p.shareControls instanceof Array && (o.shareControls = a(v.prototype.defaults.shareControls, p.shareControls)), p.bookmarks && p.bookmarks instanceof Array && (o.bookmarks = t.extend(!0, [], p.bookmarks)), null == o.flipSoundUrl) { var u = i.getElementsByTagName("script"),
                        d = null; if (u && u.length > 0)
                        for (var f in u)
                            if (u[f].src && u[f].src.match(new RegExp("jquery.ipages.min\\.js$"))) { d = u[f].src.replace(new RegExp("(.*)jquery.ipages.min\\.js$"), "$1"); break }
                    d && (o.flipSoundUrl = d + "page-flip.mp3") }
                s = new v(e, o), e.data(c, s) }
            s && (e.removeData(c), s._destroy(), s = null), null == p ? t.ajax({ url: a, type: "GET", dataType: "json" }).done(function(o) { p = t.isPlainObject(o) ? o : {} }).fail(function() { p = {} }).always(function() { u() }) : u() }) }, t(".ipgs-flipbook").ipages() }(jQuery, window, document);